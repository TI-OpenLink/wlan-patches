From 2b6940d918383135f43cbb6f422bbca93b69f823 Mon Sep 17 00:00:00 2001
From: Eliad Peller <eliad@wizery.com>
Date: Sun, 11 Mar 2012 15:15:54 +0200
Subject: [PATCH 07/10] Revert "wl12xx: fix wl12xx_sdio_interrupt() deadlock"

This reverts commit ed0bf0c858e3e8ac9234856f7ad98e3417ee8e2a.

Signed-off-by: Eliad Peller <eliad@wizery.com>
---
 drivers/net/wireless/ti/wlcore/main.c   |   11 -----------
 drivers/net/wireless/ti/wlcore/sdio.c   |   13 +++++++------
 drivers/net/wireless/ti/wlcore/wlcore.h |    1 -
 3 files changed, 7 insertions(+), 18 deletions(-)

diff --git a/drivers/net/wireless/ti/wlcore/main.c b/drivers/net/wireless/ti/wlcore/main.c
index b8c813f..2504d7b 100644
--- a/drivers/net/wireless/ti/wlcore/main.c
+++ b/drivers/net/wireless/ti/wlcore/main.c
@@ -652,16 +652,6 @@ out:
 	return IRQ_HANDLED;
 }
 
-void wl1271_sdio_irq_work(struct work_struct *work)
-{
-	struct wl1271 *wl = container_of(work, struct wl1271, sdio_irq_work);
-
-	wl1271_irq(0, wl);
-
-	if (wl->inband_claimed)
-		wlcore_enable_interrupts(wl);
-}
-
 static int wl12xx_fetch_firmware(struct wl1271 *wl, bool plt)
 {
 	const struct firmware *fw;
@@ -5053,7 +5043,6 @@ struct ieee80211_hw *wlcore_alloc_hw(size_t priv_size)
 	INIT_DELAYED_WORK(&wl->elp_work, wl1271_elp_work);
 	INIT_WORK(&wl->netstack_work, wl1271_netstack_work);
 	INIT_WORK(&wl->tx_work, wl1271_tx_work);
-	INIT_WORK(&wl->sdio_irq_work, wl1271_sdio_irq_work);
 	INIT_WORK(&wl->recovery_work, wl1271_recovery_work);
 	INIT_DELAYED_WORK(&wl->scan_complete_work, wl1271_scan_complete_work);
 	setup_timer(&wl->tx_stuck_timer, wl12xx_tx_stuck, (unsigned long) wl);
diff --git a/drivers/net/wireless/ti/wlcore/sdio.c b/drivers/net/wireless/ti/wlcore/sdio.c
index 53d2ccf..a6405e0 100644
--- a/drivers/net/wireless/ti/wlcore/sdio.c
+++ b/drivers/net/wireless/ti/wlcore/sdio.c
@@ -214,11 +214,15 @@ static void wl12xx_sdio_interrupt(struct sdio_func *func)
 	if (WARN_ON(!glue->handler || !glue->thread_fn))
 		return;
 
-	sdio_disable_irq(func);
+	if (test_bit(WL1271_FLAG_SUSPENDED, &wl->flags))
+		sdio_disable_irq(func);
 
 	ret = glue->handler(0, glue->irq_cookie);
-	if (ret == IRQ_WAKE_THREAD)
-		ieee80211_queue_work(wl->hw, &wl->sdio_irq_work);
+	if (ret == IRQ_WAKE_THREAD) {
+		sdio_release_host(func);
+		glue->thread_fn(0, glue->irq_cookie);
+		sdio_claim_host(func);
+	}
 }
 
 int wl12xx_sdio_request_irq(struct device *child,
@@ -253,7 +257,6 @@ static void wl12xx_sdio_free_irq(struct device *child)
 {
 	struct wl12xx_sdio_glue *glue = dev_get_drvdata(child->parent);
 	struct sdio_func *func = dev_to_sdio_func(glue->dev);
-	struct wl1271 *wl = platform_get_drvdata(glue->core);
 
 	printk("releasing sdio irq\n");
 	sdio_claim_host(func);
@@ -262,8 +265,6 @@ static void wl12xx_sdio_free_irq(struct device *child)
 	glue->thread_fn = NULL;
 	glue->irq_cookie = NULL;
 	sdio_release_host(func);
-
-	flush_work(&wl->sdio_irq_work);
 }
 
 
diff --git a/drivers/net/wireless/ti/wlcore/wlcore.h b/drivers/net/wireless/ti/wlcore/wlcore.h
index 5863607..642683f 100644
--- a/drivers/net/wireless/ti/wlcore/wlcore.h
+++ b/drivers/net/wireless/ti/wlcore/wlcore.h
@@ -223,7 +223,6 @@ struct wl1271 {
 	struct sk_buff_head deferred_tx_queue;
 
 	struct work_struct tx_work;
-	struct work_struct sdio_irq_work;
 	struct workqueue_struct *freezable_wq;
 
 	/* Pending TX frames */
-- 
1.7.0.4

