From d180fdba83fde3f40a0095e9417e6d47151abd33 Mon Sep 17 00:00:00 2001
From: Eliad Peller <eliad@wizery.com>
Date: Wed, 7 Sep 2011 02:34:51 +0300
Subject: [PATCH 07/21] Write to Interrupt Signal Enable (ISE) as well

We want the Card Interrupt to trigger an irq (in addition
to setting the correct CIRQ bit in the status register)

Signed-off-by: Eliad Peller <eliad@wizery.com>
---
 drivers/mmc/host/omap_hsmmc.c |    6 +++++-
 1 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/drivers/mmc/host/omap_hsmmc.c b/drivers/mmc/host/omap_hsmmc.c
index 9f7cc53..428aecc 100644
--- a/drivers/mmc/host/omap_hsmmc.c
+++ b/drivers/mmc/host/omap_hsmmc.c
@@ -1912,7 +1912,7 @@ static void omap_hsmmc_init_card(struct mmc_host *mmc, struct mmc_card *card)
 static void omap_hsmmc_enable_sdio_irq(struct mmc_host *mmc, int enable)
 {
 	struct omap_hsmmc_host *host = mmc_priv(mmc);
-	u32 ie, con;
+	u32 ie, ise, con;
 	unsigned long flags;
 	host->inband_status = enable;
 	/*
@@ -1932,14 +1932,18 @@ static void omap_hsmmc_enable_sdio_irq(struct mmc_host *mmc, int enable)
 	pm_runtime_get_sync(host->dev);
 	con = OMAP_HSMMC_READ(host->base, CON) | CLKEXTFREE;
 	ie = OMAP_HSMMC_READ(host->base, IE);
+	ise = OMAP_HSMMC_READ(host->base, ISE);
 	if (enable) {
 		ie |= CIRQ_ENABLE;
+		ise |= CIRQ_ENABLE;
 		con |= CTPL;
 	} else {
 		ie &= ~CIRQ_ENABLE;
+		ise &= ~CIRQ_ENABLE;
 		con &= ~CTPL;
 		}
 	OMAP_HSMMC_WRITE(host->base, CON, con);
+	OMAP_HSMMC_WRITE(host->base, ISE, ise);
 	OMAP_HSMMC_WRITE(host->base, IE, ie);
 	OMAP_HSMMC_READ(host->base, IE); /* flush posted write */
 	pm_runtime_put_sync(host->dev);
-- 
1.7.0.4

